<!doctype html>
<html lang="en">

<head>
  <link rel="stylesheet"
    href="https://cdnjs.cloudflare.com/ajax/libs/highlight.js/11.9.0/styles/default.min.css">
  <link rel="stylesheet" href="/styles/markdown.css">
  {%- include('../common/head') -%}
  <script defer
    src="https://cdnjs.cloudflare.com/ajax/libs/markdown-it/13.0.2/markdown-it.min.js"></script>
  <script defer
    src="https://cdnjs.cloudflare.com/ajax/libs/highlight.js/11.9.0/highlight.min.js"></script>
  <script defer src="/socket.io/socket.io.js"></script>
  <title>Intelligence Hub</title>
  <meta name="description"
    content="Intelligence Hub aggregates responses from major AI chatbots and search engines, providing a centralized platform to explore intelligence insights across various providers.">
</head>

<div class="content content--chat">
  <form id="app" v-cloak>
    <div class="form__chat-container">
      <div class="form__chat-messages" ref="messages">
        <div class="form__chat-message" v-for="message in messages">
          <div class="form__chat-user" v-if="message.role === 'user'" v-text="message.content">
          </div>
          <div class="form__chat-assistants" v-else-if="message.role === 'assistants'">
            <div class="form__assistant" v-for="(response, assistant) in message.content">
              <div class="form__assistant-name" v-text="assistant.toUpperCase()"></div>
              <div class="form__assistant-response markdown-body"
                v-if="typeof response === 'string'"
                v-markdown="response === '' ? 'Processing...' : response"></div>
              <div class="form__assistant-response" v-if="typeof response === 'object'">
                <ul>
                  <li class="form__assistant-search-item" v-for="item in response">
                    <a :href="item.link" target="_blank" v-text="item.title"></a>
                    <p v-text="item.displayLink" class="form__assistant-search-host"></p>
                    <p v-text="item.snippet"></p>
                  </li>
                </ul>
              </div>
            </div>
          </div>
        </div>
      </div>
      <div class="form__chat-input">
        <div class="form__group form__group--inline">
          <input ref="focus" type="input" spellcheck="false" id="input" v-model.trim="input"
            placeholder="Message" @keyup.enter.exact="send" required>
          <button @click="send" :disabled="pending.app" class="button--send">
            <span>Send</span>
            <span v-if="pending.app">...</span>
          </button>
        </div>
        <div class="form__oops" v-text="oops.app"></div>
      </div>
    </div>
  </form>
</div>

<script>
  window.onload = () => {
    common.createApp('#app', {
      messages: [],
      input: '',
    }, {
      send() {
        if (this.pending.app) {
          return;
        }
        this.pending.app = true;
        delete this.oops.app;
        this.messages.push({
          role: 'user',
          content: this.input
        });
        this.input = '';
        const socket = io();
        socket.on('connect', () => {
          console.log('Connected to server');
          console.log(this);
          socket.emit('generate', this.messages);
        });
        this.messages.push({
          role: 'assistants',
          content: {
            'ChatGPT 4': '',
            'Claude 3 Opus': '',
            'Google Search': '',
          }
        });
        this.$nextTick(() => {
          this.$refs.messages.scrollTop = this.$refs.messages.scrollHeight;
        });
        const content = this.messages[this.messages.length - 1].content;
        socket.on('response', (data) => {
          console.log(data);
          if (data === 'END') {
            socket.disconnect();
            return;
          }
          content['ChatGPT 4'] += data['ChatGPT 4'] || '';
          content['Claude 3 Opus'] += data['Claude 3 Opus'] || '';
          if (data['Google Search']) {
            content['Google Search'] = data['Google Search'];
          }
        });
        socket.on('disconnect', () => {
          delete this.pending.app;
          console.log('Disconnected from server');
        });
      }
    });
  };
</script>

</html>